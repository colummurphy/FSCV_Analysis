function [dapair,lfppair]=getsitepairs(dasites,varargin)
argnum=1;
cleoflag=0;
maxnumpairs=0;
while argnum<=length(varargin)
    switch varargin{argnum}
        case 'numpairs'
            argnum=argnum+1;
            maxnumpairs=varargin{argnum};       %limit # pairs
        case 'cleo'
            cleoflag=1;
    end
    argnum=argnum+1;
end

%get corresponding lfp pairs targeted based on analyzed data
sitepairs={...
    'pl2',  'pl1-p5',...
    'pl2',  'p1-pl3',...
    'pl3',  'pl1-p5',...
    'pl3',  'p1-pl3',...
    'pl3',  'pl2-p1',...
    'pl3',  'pl1-p3',...
     'p3',   'p1-pl3',...
     'p3',  'pl1-p5',...
    'p5',   'p1-pl3',...
    'p5',   'pl2-p1',...
    'pl1',  'pl2-p1',...
    'pl1',  'pl2-pl3',...
    'pl1',  'p1-pl3',...
    'cl3',  'cl1-cl4',...
    'cl3',  'cl1-cl5',...
    'cl5',  'cl3-cl6',...
    'cl5',  'cl4-cl6',...    
    'cl6',  'cl1-cl4',...
    'cl6',  'cl1-cl5'...
    };
sitepairs={...
    'pl2',  'pl1-p5',...
    'pl2',  'p1-pl3',...
    'pl3',  'pl1-p5',...
    'pl3',  'p1-pl3',...
    'pl3',  'pl2-p1',...
    'pl3',  'pl1-p3',...
     'p3',   'p1-pl3',...
     'p3',  'pl1-p5',...
    'p5',   'p1-pl3',...
    'p5',   'pl2-p1',...
    'pl1',  'pl2-p1',...
    'pl1',  'pl2-pl3',...
    'pl1',  'p1-pl3',...
    'cl3',  'cl1-cl4',...
    'cl3',  'cl4-cl5',...    
    'cl5',  'cl3-cl6',...
    'cl5',  'cl4-cl6',...    
   'cl5',   'cl1-cl3',...
    'cl5',  'cl3-cl4',...
    'cl6',  'cl4-cl5',...
    'cl6',  'cl1-cl4',...
    };

sitepairs={...
    'pl2',  'pl1-p5',...
    'pl2',  'p1-pl3',...
    'pl2',  'pl1-p1',...
    'pl2',  'p1-p3',...
    'pl2',  'p1-p5',...
    'pl3',  'pl1-p5',...
    'pl3',  'pl2-p1',...
    'pl3',  'pl1-p3',...
    'pl3',  'pl1-pl2',...
    'pl3',  'p5-pm3',...
    'pl3',  'p1-p5',...
    'p3',  'p1-p5',...
     'p3',   'p1-pl3',...
     'p3',  'pl1-p5',...     
     'p3',  'p5-pm3',...
    'p5',   'p1-pl3',...
    'p5',   'pl2-p1',...
    'p5',   'p1-p3',...
    'p5',   'p3-pl3',...
    'pl1',  'pl2-p1',...
    'pl1',  'pl2-pl3',...
    'pl1',  'p1-pl3',...
    'pl1',  'p1-p3',...
    'cl3',  'cl1-cl4',...
    'cl3',  'cl4-cl5',...              
    'cl5',  'cl4-cl6',...   
    'cl5',  'cl3-cl6',...
    'cl5',  'cl3-cl4',...
    'cl5',   'cl1-cl3',...
        'cl6',  'cl1-cl5',...
    'cl6',  'cl4-cl5',...
    'cl6',  'cl1-cl4'...
    };
%{
sitepairs={...
    'pl2',  'pl1-p5',...
    'pl2',  'p1-pl3',...
    'pl2',  'pl1-p1',...
    'pl2',  'p1-p3',...
    'pl2',  'p1-p5',...
    'pl3',  'pl1-p5',...
    'pl3',  'pl2-p1',...
    'pl3',  'pl1-p3',...
    'pl3',  'pl1-pl2',...
    'pl3',  'p5-pm3',...
    'pl3',  'p1-p5',...
    'p3',  'p1-p5',...
     'p3',   'p1-pl3',...
     'p3',  'pl1-p5',...     
     'p3',  'p5-pm3',...
    'p5',   'p1-pl3',...
    'p5',   'pl2-p1',...
    'p5',   'p1-p3',...
    'p5',   'p3-pl3',...
    'pl1',  'pl2-p1',...
    'pl1',  'pl2-pl3',...
    'pl1',  'p1-pl3',...
    'pl1',  'p1-p3',...
    'cl3',  'cl1-cl4',...
    'cl3',  'cl4-cl5',...  
    'cl5',  'cl3-cl6',...
    'cl5',  'cl4-cl6',...  
        'cl5',  'cl3-cl4',...
    'cl5',   'cl1-cl3',...        
    'cl6',  'cl4-cl5',...
    'cl6',  'cl1-cl5',...
    'cl6',  'cl1-cl4'...
    };
%}
if cleoflag
    sitepairs={...
    'p6',  'p4-p2',...
    'p6',  'p2-p0',...
        'cl1','cl4-cl3',...
    'cl1',  'c5-p4',...
    'cl6',  'cl4-c5',...
    'cl6','cl4-cl3',...
     'cl5','cl4-cl3',...
     'cl5b',  'cl4-cl5',...
    'cl6100',   'cl3-cl1',...
    'cl5',  'cl3-cl1',...
    'cl5b',  'cl3-cl1',...
    'p6',  'p3-p4',...
    'a4000',  'p3-p4',...
    'p5',  'p6-p1',...
    'p5',   'cl7-p6'...
    };
end


ids=find(contains(sitepairs,dasites));

idsda=ids(logical(mod(ids,2))); %odd ids indicate fscv sites
idslfp=idsda+1;     %subseq cell is the lfp pair

lfppair=sitepairs(idslfp);
dapair=sitepairs(idsda);

if maxnumpairs~=0 && length(dapair)>1
    curid=dapair{1};
    countcurid=1;
    countstored=2;
    dapairtemp{1}=dapair{1};
    lfppairtemp{1}=lfppair{1};
    for ix=2:length(dapair)
        curid=dapair{ix};
        if countcurid<maxnumpairs && strcmp(curid,dapair{ix-1})
            %same as previous da
            dapairtemp{countstored}=dapair{ix};
            lfppairtemp{countstored}=lfppair{ix};
            countcurid=countcurid+1;
            countstored=countstored+1;
        elseif ~strcmp(curid,dapair{ix-1})
            %not the same, reset count & store
            dapairtemp{countstored}=dapair{ix};
            lfppairtemp{countstored}=lfppair{ix};       
            countcurid=1;
            countstored=countstored+1;
        elseif countcurid>=maxnumpairs
            %more than max count, skip
        end
    end
    dapair=dapairtemp;
    lfppair=lfppairtemp;
end

            
            

end